// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizGame.Data;

#nullable disable

namespace QuizGame.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220924224644_SeedGameTable")]
    partial class SeedGameTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.7.22376.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuizGame.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            Name = "AlexGame",
                            State = 0
                        },
                        new
                        {
                            GameId = 2,
                            Name = "BigGamersOnly",
                            State = 0
                        },
                        new
                        {
                            GameId = 3,
                            Name = "SmallGamersOnly",
                            State = 0
                        });
                });

            modelBuilder.Entity("QuizGame.Models.Game", b =>
                {
                    b.OwnsOne("QuizGame.Models.Board", "Board", b1 =>
                        {
                            b1.Property<int>("BoardId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("BoardId"));

                            b1.Property<int>("BoardSize")
                                .HasColumnType("int");

                            b1.Property<string>("FriendlyName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("GameId")
                                .HasColumnType("int");

                            b1.Property<string>("Spaces")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BoardId");

                            b1.HasIndex("GameId")
                                .IsUnique()
                                .HasFilter("[GameId] IS NOT NULL");

                            b1.ToTable("Boards");

                            b1.WithOwner("Game")
                                .HasForeignKey("GameId");

                            b1.Navigation("Game");

                            b1.HasData(
                                new
                                {
                                    BoardId = 1,
                                    BoardSize = 18,
                                    FriendlyName = "GiraffeBoard",
                                    GameId = 1,
                                    Spaces = "0200400001000300"
                                },
                                new
                                {
                                    BoardId = 2,
                                    BoardSize = 18,
                                    FriendlyName = "CheetahBoard",
                                    GameId = 2,
                                    Spaces = "0200400001000300"
                                });
                        });

                    b.OwnsMany("QuizGame.Models.Player", "Players", b1 =>
                        {
                            b1.Property<int>("PlayerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("PlayerId"));

                            b1.Property<int?>("GameId")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Space")
                                .HasColumnType("int");

                            b1.HasKey("PlayerId");

                            b1.HasIndex("GameId");

                            b1.ToTable("Players");

                            b1.WithOwner("Game")
                                .HasForeignKey("GameId");

                            b1.Navigation("Game");

                            b1.HasData(
                                new
                                {
                                    PlayerId = 1,
                                    GameId = 1,
                                    Name = "Alex",
                                    Space = 0
                                },
                                new
                                {
                                    PlayerId = 2,
                                    GameId = 1,
                                    Name = "Brian",
                                    Space = 0
                                },
                                new
                                {
                                    PlayerId = 3,
                                    GameId = 1,
                                    Name = "Jahlaud",
                                    Space = 0
                                },
                                new
                                {
                                    PlayerId = 4,
                                    GameId = 1,
                                    Name = "Adrian",
                                    Space = 0
                                },
                                new
                                {
                                    PlayerId = 5,
                                    GameId = 1,
                                    Name = "Felix",
                                    Space = 0
                                });
                        });

                    b.Navigation("Board");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
